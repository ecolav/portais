name: Tauri Release (Linux)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Ensure toolchain env for downstream steps
        run: echo "toolchain=stable" >> $GITHUB_ENV

      - name: Install system dependencies
        run: |
          sudo apt-get update
          # Dependências base
          sudo apt-get install -y build-essential curl wget pkg-config xz-utils patchelf libssl-dev
          # Bibliotecas do WebView e GTK
          sudo apt-get install -y libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev
          # Tentar WebKitGTK 4.0 (Jammy) e cair para 4.1 (Noble) se necessário
          sudo apt-get install -y libwebkit2gtk-4.0-dev || sudo apt-get install -y libwebkit2gtk-4.1-dev
          # JavaScriptCoreGTK (necessário para javascriptcore-rs-sys)
          sudo apt-get install -y libjavascriptcoregtk-4.1-dev || sudo apt-get install -y libjavascriptcoregtk-4.0-dev
          # LibSoup3 para soup3-sys
          sudo apt-get install -y libsoup-3.0-dev
          # Garantir PKG_CONFIG_PATH padrão
          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/lib/pkgconfig:/usr/share/pkgconfig" >> $GITHUB_ENV

      - name: Install frontend dependencies (root)
        run: npm ci

      - name: Build frontend (root)
        run: npm run build

      - name: Prepare Node sidecar (Linux x64)
        run: |
          mkdir -p src-tauri/bin
          curl -L https://nodejs.org/dist/v18.20.4/node-v18.20.4-linux-x64.tar.xz -o /tmp/node.tar.xz
          tar -xJf /tmp/node.tar.xz -C /tmp
          cp /tmp/node-v18.20.4-linux-x64/bin/node src-tauri/bin/node
          chmod +x src-tauri/bin/node

      - name: Bundle server resources
        run: |
          mkdir -p src-tauri/resources/server
          cp server.js src-tauri/resources/server/server.js
          cp package-server.json src-tauri/resources/server/package.json
          cd src-tauri/resources/server
          npm install --omit=dev

      - name: Build and Release with Tauri
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          toolchain: stable
          projectPath: src-tauri
          includeUpdaterJson: false
          tagName: ${{ github.ref_name }}
          releaseName: Portal Ecolav ${{ github.ref_name }}
          releaseDraft: false
          prerelease: false


